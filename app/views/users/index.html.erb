<style>
    /* Always set the map height explicitly to define the size of the div
           * element that contains the map. */
    #map {
        height: 100%;
        width: 600px;
        height: 400px;
        border-radius: 2px;
        box-shadow: 1px 1px 3px #333;

    }

    .infocus {
        background-color: #999;
    }

    .store-places {

        height: 50px;
        width: 175px;
        border-radius: 20px;
        box-shadow: 1px 1px 3px #333;
        display: block;
        text-align: center;
        margin: 10px;
        height: auto;
        padding: 10px 0;

    }

    .store-places:hover {
        transform: scale(1.02);
        box-shadow: 0px 1px 1px #aaa;
    }
</style>

<%= render 'layouts/header' %>
<%= render 'layouts/nav' %>
<div class="container">
    <section class="main">
        <div id="map"></div>
        <div id="btn-link">
            <%= link_to '新增日記', new_diary_path, class:'btn btn-secondary btn-linkto', data: { confirm: '是否新增日記？'} %>
            <%= link_to '加入口袋', new_pocket_path, class:'btn btn-secondary btn-linkto', data: { confirm: '是否加入口袋？'} %>
        </div>
    </section>
    <section class="layouts/sidebar">
        <div id="places"></div>
    </section>
</div>

<script type="text/javascript">
    var map, infoWindow, address, address_contury, address_area;
    function initMap() {
        let pyrmont = { lat: 25.04, lng: 121.51 };
        map = new google.maps.Map(document.getElementById('map'), {
            center: pyrmont,
            zoom: 14
        });

        let service = new google.maps.places.PlacesService(map);
        infoWindow = new google.maps.InfoWindow;

        //#<!-- 自選座標 -->
        map.addListener('click', function (e) {
            $('#places').empty();
            //alert(e.latLng);
            let lat = e.latLng.lat();
            let lng = e.latLng.lng();
            pyrmont = { lat: lat, lng: lng };
            service.nearbySearch(
                { location: pyrmont, radius: 300, type: ['store'] },
                function (results, status, pagination) {
                    if (status !== 'OK') return;
                    createMarkers(results);
                    //console.log(results);
                });
            function createMarkers(places) {
                var bounds = new google.maps.LatLngBounds();
                var placesList = document.getElementById('places');
                //console.log(placesList);
                fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&language=zh-TW&key=AIzaSyDdfhhffGo6wHQs3NrMK_oyI1snX-6DTd0`)
                    .then(function (response) {
                        return response.json();
                    })
                    .then(function (data) {
                        //console.log(data);
                        //縣市、區域、地址、座標
                        //adress
                        //$('.sidebar').append(`<div>${data.results[0].formatted_address}</div>`);
                        address = data.results[0].formatted_address;
                        //address_contury = data.results[0].address_components[3].long_name;
                        //address_area = data.results[0].address_components[2].long_name;
                        //console.log(address_contury);
                        //console.log(address_area);
                        placeMarkerAndPanTo(e.latLng, map);
                        //市+區
                        //$('#contury_area').empty().append(`<div>${address_contury}</div><div>${address_area}</div>`);

                        //alert(address);
                    })
                    .catch(function (error) {
                        alert('some bad thing happend')
                        alert(error)
                    })

                for (var i = 0, place; place = places[i]; i++) {
                    var image = {
                        url: place.icon,
                        size: new google.maps.Size(71, 71),
                        origin: new google.maps.Point(0, 0),
                        anchor: new google.maps.Point(17, 34),
                        scaledSize: new google.maps.Size(25, 25)
                    };

                    var marker = new google.maps.Marker({
                        map: map,
                        icon: image,
                        title: place.name,
                        position: place.geometry.location
                    });

                    //$('#places').append(`<button type="button" class="store-places" value="${place.place_id}">${place.name}</button>`); -->
                    $('#places').append(`<button type="button" class="store-places" value=` + JSON.stringify({ "name": place.name, "lat": place.geometry.location.lat(), "lng": place.geometry.location.lng(), "place_id": place.place_id }) + `>${place.name}</button>`);
                    $('.store-places').animate({ width: "200px" }, 200);
                    //$('.sidebar').append(`<p>${e.latLng.lat()},${e.latLng.lng()}</p>`);
                    //ajax
                    //$.get('<%= ajax_path %>', { lat: e.latLng.lat(), lng: e.latLng.lng() });

                    bounds.extend(place.geometry.location);
                }
                map.fitBounds(bounds);
            }
        });
        //var json = { "name": place.name, "id": place_id, "lat": place.geometry.location.lat(), "lng": place.geometry.location.lng() };
        $('#places').on('click', 'button', function (event) {
            let selectpoint = $(this).text();
            alert(`你選了『${selectpoint}』`);
            $(this).addClass('infocus');
            //e.preventDefult
            let aaa = JSON.parse($(this).val());
            //console.log('aaa')
            //console.log('!')
            //console.log(JSON.stringify(aaa))

            document.cookie = 'location=' + JSON.stringify(aaa);

            //$.get('<%= ajax_path %>', { location: aaa });
            $.get('<%= new_diary_path %>', { location: aaa });



        });
        function placeMarkerAndPanTo(latLng, map) {
            var marker = new google.maps.Marker({
                position: latLng,
                map: map
            });
            add_info(latLng);
            map.panTo(latLng);
        }

        //#<!-- 結束 -->
    }


    function add_info(pos) {
        infoWindow = new google.maps.InfoWindow;
        infoWindow.setPosition(pos);
        infoWindow.setOptions({
            pixelOffset: new google.maps.Size(0, -40)
        });
        //console.log(pos);
        infoWindow.setContent(address);
        infoWindow.open(map);
        map.setCenter(pos);
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
            'Error: The Geolocation service failed.' :
            'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
    }
</script>
<script async defer
    src="https://maps.googleapis.com/maps/api/js?key=<%= Figaro.env.google_api_key %>&libraries=places&callback=initMap">
    </script>